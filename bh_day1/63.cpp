#include<iostream>

// 对象的初始化和清理
// 构造函数和析构函数：两个函数会被编译器自动调用，完成对象初始化和清理工作
// 其实编译器会提供空实现的构造函数和析构函数

// 构造函数：主要作用在于创建对象时为对象的成员属性赋值，构造函数由编译器自动调用，无需手动调用
// 析构函数：主要作用于对象销毁前系统自动调用，执行一些清理工作

// 构造函数语法 类名（）{}
// 没有返回值也不写void
// 函数名称与类名相同
// 可以有参数，因此可以重载
// 程序在调用对象时会自动调用构造，无需手动调动，而且只会调用一次

// 析构函数 ~类名（）{}
// 没有返回值，没有void
// 多加一个~
// 不可以有参数，不可以重载
// 在对象销毁前会自动调用析构，只会调用一次

//1、构造函数进行初始化操作

class Person{
public:    
    //1、构造函数
    Person(){
        std::cout << "Person构造函数的调用" << std::endl;
    }
    //2、析构函数
    ~Person(){
        std::cout << "Person析构函数的调用" << std::endl;
    }
};

//构造和析构都是必须有的实现，即使没有编译器也会自动提供一个空的
void test01(){
    Person p;
}
//2、析构函数进行清理操作

int main(){
    test01();
    Person p;
    system("pause");
    return 0;
}

